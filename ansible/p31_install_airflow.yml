---

# Playbook 31: Setup Python Virtual Environment and install Apache Airflow on worker[0]
# This playbook performs the following:
# 1. Creates a Python virtual environment.
# 2. Installs Apache Airflow with Celery support and Graphviz.
# 3. Configures Airflow (.airflowignore, disable example DAGs).
# 4. Prepares DAG permissions and cleans up logs.

- name: Notify user about Playbook 31
  hosts: localhost
  tasks:
    - name: Display playbook message
      ansible.builtin.debug:
        msg: "Running Playbook 31: Setup Python virtual environment and install Apache Airflow on worker[0]."

- name: Setup Python Virtual Environment and install Apache Airflow components on workers[0]
  hosts: workers[0]
  become: yes
  become_user: root
  tasks:
    - name: Create a Python virtual environment (py_env)
      shell: python -m venv py_env
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Activate virtual environment and install Apache Airflow with Celery
      shell: |
        source py_env/bin/activate
        pip install "apache-airflow[celery]==2.10.5" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.10.5/constraints-3.9.txt"
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Create .airflowignore file with logs/*
      copy:
        dest: /home/almalinux/Image-Classification-Model-Tuning/.airflowignore
        content: "logs/*\n"
        mode: '0644'

    - name: Install graphviz via pip
      shell: |
        cd /home/almalinux/Image-Classification-Model-Tuning && \
        source py_env/bin/activate
        pip install graphviz
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Remove existing logs directory
      shell: |
        cd /home/almalinux/Image-Classification-Model-Tuning && \
        source py_env/bin/activate
        rm -rf dags/logs
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Give execute permissions to the DAG file
      shell: |
        cd /home/almalinux/Image-Classification-Model-Tuning && \
        source py_env/bin/activate
        chmod +x dags/ai_vs_human_classification_dag.py
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Disable loading of the example DAGs
      ini_file:
        path: /home/almalinux/Image-Classification-Model-Tuning/airflow.cfg
        section: core
        option: load_examples        # note the final “s” in the setting name
        value: 'False'
        backup: yes    