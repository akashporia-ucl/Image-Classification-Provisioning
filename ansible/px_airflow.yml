---
- name: Setup Python Virtual Environment and install Apache Airflow components on workers[0]
  hosts: workers[0]
  become: yes
  become_user: root
  tasks:
    - name: Create a Python virtual environment (py_env)
      shell: python -m venv py_env
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Activate virtual environment and install Apache Airflow with Celery
      shell: |
        source py_env/bin/activate
        pip install "apache-airflow[celery]==2.10.5" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.10.5/constraints-3.9.txt"
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Activate virtual environment and install Apache Airflow Providers for Apache Spark
      shell: |
        source py_env/bin/activate
        pip install apache-airflow-providers-apache-spark
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Set Airflow environment variables and source the virtual environment
      shell: |
        cd /home/almalinux/Image-Classification-Model-Tuning && \
        source py_env/bin/activate && \
        export AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////tmp/airflow.db && \
        export AIRFLOW_HOME=.
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Initialize the Airflow database
      shell: |
        source py_env/bin/activate && airflow db init
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Create Airflow admin user
      expect:
        command: "bash -c 'source py_env/bin/activate && airflow users create --username admin --firstname firstname --lastname lastname --role Admin --email admin@airflow.com'"
        responses:
          "Password:": "admin"
          "Repeat for confirmation:": "admin"
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Create .airflowignore file with logs/*
      copy:
        dest: /home/almalinux/Image-Classification-Model-Tuning/.airflowignore
        content: "logs/*\n"
        mode: '0644'

    - name: Install graphviz via pip
      shell: |
        source py_env/bin/activate
        pip install graphviz
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Remove existing logs directory
      shell: |
        source py_env/bin/activate
        rm -rf dags/logs
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Give execute permissions to the DAG file
      shell: |
        source py_env/bin/activate
        chmod +x dags/ai_vs_human_classification_dag.py
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Start Airflow webserver in a detached screen session
      command: >
        screen -S airflow_webserver -d -m bash -c "source py_env/bin/activate && airflow webserver -p 7777"
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning

    - name: Start Airflow scheduler in a screen session
      command: >
        screen -S airflow_scheduler -d -m bash -c "source py_env/bin/activate && airflow scheduler"
      args:
        chdir: /home/almalinux/Image-Classification-Model-Tuning


#nano .airflowignore => logs/*
#pip install graphviz
#rm -rf dags/logs
# sudo chmod +x dags/ai_vs_human_classification_dag.py => also fix errror